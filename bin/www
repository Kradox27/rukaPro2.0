#!/usr/bin/env node
//process.env.NODE_CONFIG_ENV = "production";
const config = require('config')
const debug = require('debug')('rukaPro_2.0:server');
const http = require('http');
const app = require('../server');

const server = http.createServer(app);
const port = config.get('server.port');
app.set('port', port);

function onError(error) {
  if (error.syscall !== 'listen') throw error;

  const bind = typeof port === 'string'
    ? `Pipe ${port}`
    : `Port ${port}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}
 
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? `pipe ${addr}`
    : `port ${addr.port}`;
  debug(`Listening on ${bind} in ${config.util.getEnv('NODE_ENV')}`)
}

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
